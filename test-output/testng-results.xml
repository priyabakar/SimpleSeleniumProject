<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="17253" started-at="2020-06-04T20:25:13Z" finished-at="2020-06-04T20:25:30Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="17253" started-at="2020-06-04T20:25:13Z" finished-at="2020-06-04T20:25:30Z">
      <class name="com.Chiller.Pom.Test.SignUpFormTest">
        <test-method status="PASS" signature="reportInit()[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="reportInit" is-config="true" duration-ms="189" started-at="2020-06-04T20:25:13Z" finished-at="2020-06-04T20:25:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportInit -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="setup" is-config="true" duration-ms="3270" started-at="2020-06-04T20:25:13Z" finished-at="2020-06-04T20:25:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="register(java.lang.reflect.Method)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="register" is-config="true" duration-ms="5" started-at="2020-06-04T20:25:17Z" finished-at="2020-06-04T20:25:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Chiller.Pom.Test.SignUpFormTest.robotClass()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="PASS" signature="robotClass()[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="robotClass" duration-ms="8931" started-at="2020-06-04T20:25:17Z" finished-at="2020-06-04T20:25:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- robotClass -->
        <test-method status="PASS" signature="cleanUP(org.testng.ITestResult)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="cleanUP" is-config="true" duration-ms="9" started-at="2020-06-04T20:25:26Z" finished-at="2020-06-04T20:25:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=robotClass status=SUCCESS method=SignUpFormTest.robotClass()[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="register(java.lang.reflect.Method)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="register" is-config="true" duration-ms="0" started-at="2020-06-04T20:25:26Z" finished-at="2020-06-04T20:25:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Chiller.Pom.Test.SignUpFormTest.signUpForm()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="FAIL" signature="signUpForm()[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="signUpForm" duration-ms="1520" started-at="2020-06-04T20:25:26Z" finished-at="2020-06-04T20:25:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thank you!] but found [Thank you]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thank you!] but found [Thank you]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.Chiller.Pom.Test.SignUpFormTest.signUpForm(SignUpFormTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpForm -->
        <test-method status="PASS" signature="cleanUP(org.testng.ITestResult)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="cleanUP" is-config="true" duration-ms="345" started-at="2020-06-04T20:25:27Z" finished-at="2020-06-04T20:25:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpForm status=FAILURE method=SignUpFormTest.signUpForm()[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="register(java.lang.reflect.Method)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="register" is-config="true" duration-ms="1" started-at="2020-06-04T20:25:28Z" finished-at="2020-06-04T20:25:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Chiller.Pom.Test.SignUpFormTest.signUpFormWithDB(com.Chiller.Pom.Model.FormSignUp)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="PASS" signature="signUpFormWithDB(com.Chiller.Pom.Model.FormSignUp)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="signUpFormWithDB" duration-ms="729" started-at="2020-06-04T20:25:28Z" data-provider="dbdata" finished-at="2020-06-04T20:25:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FormSignUp [FirstName=Bakara, LastName=Rajamoorthy, Address=arrupukottai, ZipCode=30024]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpFormWithDB -->
        <test-method status="PASS" signature="cleanUP(org.testng.ITestResult)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="cleanUP" is-config="true" duration-ms="0" started-at="2020-06-04T20:25:29Z" finished-at="2020-06-04T20:25:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpFormWithDB status=SUCCESS method=SignUpFormTest.signUpFormWithDB(com.Chiller.Pom.Model.FormSignUp)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="register(java.lang.reflect.Method)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="register" is-config="true" duration-ms="0" started-at="2020-06-04T20:25:29Z" finished-at="2020-06-04T20:25:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Chiller.Pom.Test.SignUpFormTest.signUpFormWithDB(com.Chiller.Pom.Model.FormSignUp)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="PASS" signature="signUpFormWithDB(com.Chiller.Pom.Model.FormSignUp)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="signUpFormWithDB" duration-ms="633" started-at="2020-06-04T20:25:29Z" data-provider="dbdata" finished-at="2020-06-04T20:25:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FormSignUp [FirstName=Priya, LastName=Jayaraman, Address=Sirumugai, ZipCode=123456]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpFormWithDB -->
        <test-method status="PASS" signature="cleanUP(org.testng.ITestResult)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="cleanUP" is-config="true" duration-ms="0" started-at="2020-06-04T20:25:29Z" finished-at="2020-06-04T20:25:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpFormWithDB status=SUCCESS method=SignUpFormTest.signUpFormWithDB(com.Chiller.Pom.Model.FormSignUp)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="register(java.lang.reflect.Method)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="register" is-config="true" duration-ms="0" started-at="2020-06-04T20:25:29Z" finished-at="2020-06-04T20:25:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Chiller.Pom.Test.SignUpFormTest.signUpFormWithDB(com.Chiller.Pom.Model.FormSignUp)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="PASS" signature="signUpFormWithDB(com.Chiller.Pom.Model.FormSignUp)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="signUpFormWithDB" duration-ms="654" started-at="2020-06-04T20:25:29Z" data-provider="dbdata" finished-at="2020-06-04T20:25:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FormSignUp [FirstName=Tejes, LastName=Prabakaran, Address=Cumming, ZipCode=30041]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpFormWithDB -->
        <test-method status="PASS" signature="cleanUP(org.testng.ITestResult)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="cleanUP" is-config="true" duration-ms="0" started-at="2020-06-04T20:25:30Z" finished-at="2020-06-04T20:25:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpFormWithDB status=SUCCESS method=SignUpFormTest.signUpFormWithDB(com.Chiller.Pom.Model.FormSignUp)[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUP -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="tearDown" is-config="true" duration-ms="86" started-at="2020-06-04T20:25:30Z" finished-at="2020-06-04T20:25:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="rptFlush()[pri:0, instance:com.Chiller.Pom.Test.SignUpFormTest@553a3d88]" name="rptFlush" is-config="true" duration-ms="322" started-at="2020-06-04T20:25:30Z" finished-at="2020-06-04T20:25:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rptFlush -->
      </class> <!-- com.Chiller.Pom.Test.SignUpFormTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
